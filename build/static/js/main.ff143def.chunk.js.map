{"version":3,"sources":["components/List/List.module.css","components/Board/Board.module.css","components/Card/Card.module.css","actions/add-list.js","actions/delete-card.js","assets/images/close.svg","components/Card/Card.js","components/AddItem/AddItem.js","actions/add-card.js","actions/delete-list.js","components/List/List.js","selectors/select-board.js","selectors/select-list.js","selectors/select-card.js","thunks/reorder-card.js","thunks/reorder-list.js","components/Board/Board.js","App.js","utils/random-integer.js","reducers/main.js","utils/save-state.js","store/store.js","utils/load-state.js","index.js"],"names":["module","exports","ADD_LIST","addListActionCreator","title","index","cards","type","payload","DELETE_CARD","deleteCard","listID","Card","props","dispatch","useDispatch","handleClick","event","draggableId","card","id","provided","draggableProps","ref","innerRef","dragHandleProps","className","classNames","styles","onClick","src","close","alt","AddItem","useState","addingItem","setAddingItem","setTitle","AddItemButton","addItemButton","item","AddItemForm","onSubmit","e","preventDefault","addItem","addItemForm","placeholder","autoFocus","value","onChange","target","buttons","add","cancel","fill","height","viewBox","width","xmlns","d","ADD_CARD","addCard","DELETE_LIST","deleteList","List","list","droppableId","droppableProps","map","text","length","selectBoard","state","board","selectList","lists","selectCard","reorderCard","source","destination","getState","reorderList","Board","useSelector","addList","style","backgroundImage","backgroundURL","onDragEnd","result","direction","App","randomInteger","min","max","rand","Math","random","floor","initialState","dragging","reducer","action","newLists","Array","from","splice","String","newList","newCards","listIndex","i","newBoard","findIndex","saveState","stringifiedState","JSON","stringify","localStorage","setItem","savedState","getItem","parse","loadState","store","createStore","applyMiddleware","thunk","subscribe","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff143def.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__2XD8x\",\"addItemButton\":\"List_addItemButton__1tof7\",\"buttons\":\"List_buttons__3qWVA\",\"add\":\"List_add__3En4d\",\"cancel\":\"List_cancel__2OupE\",\"addItemForm\":\"List_addItemForm__2OqGc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__3lVcr\",\"addItemButton\":\"Board_addItemButton__25o3K\",\"addItemForm\":\"Board_addItemForm__26-No\",\"buttons\":\"Board_buttons__2VAIt\",\"add\":\"Board_add__2pyWR\",\"cancel\":\"Board_cancel__1DV2m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__32-WR\"};","export const ADD_LIST = 'ADD_LIST';\r\n\r\nconst addListActionCreator = (title, index, cards) => ({\r\n  type: ADD_LIST,\r\n  payload: {\r\n    title,\r\n    index,\r\n    cards\r\n  },\r\n})\r\n\r\nexport default addListActionCreator;","export const DELETE_CARD = \"DELETE_CARD\";\r\n\r\nconst deleteCard = (listID, index) => ({\r\n  type: DELETE_CARD,\r\n  payload: {\r\n    listID,\r\n    index\r\n  }\r\n})\r\n\r\nexport default deleteCard;","export default __webpack_public_path__ + \"static/media/close.9b642e1c.svg\";","import styles from './Card.module.css';\r\nimport classNames from \"classnames\";\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport deleteCard from \"../../actions/delete-card\";\r\nimport close from '../../assets/images/close.svg';\r\n\r\nconst Card = (props) => {\r\n  const dispatch = useDispatch();\r\n  const handleClick = (event) => {\r\n    dispatch(deleteCard(props.listID, props.index));\r\n  }\r\n\r\n  return (\r\n    <Draggable draggableId={props.card.id} index={props.index} type=\"card\">\r\n      {(provided) => (\r\n        <li {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps} className={classNames(styles.card)} >\r\n          {props.card.title}\r\n          <button onClick={handleClick}><img src={close} alt={\"delete\"}/></button>\r\n        </li>\r\n      )}\r\n    </Draggable>\r\n  )\r\n}\r\n\r\nexport default Card;","import {useState} from \"react\";\r\n\r\nconst AddItem = (props) => {\r\n  const styles = props.styles || {};\r\n  const [addingItem, setAddingItem] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n\r\n  const AddItemButton = <button onClick={() => setAddingItem(true)} className={styles.addItemButton}>+ Add {props.item}</button>;\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.addItem(title);\r\n    setTitle('');\r\n    setAddingItem(false);\r\n  }\r\n\r\n  const hideForm = () => {\r\n    setAddingItem(false);\r\n    setTitle('');\r\n  }\r\n\r\n  const AddItemForm = (\r\n    <form onSubmit={onSubmit} className={styles.addItemForm}>\r\n      <input placeholder='Title' autoFocus={true} type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)}/>\r\n      <div className={styles.buttons}>\r\n        <button type='submit' className={styles.add}>Add</button>\r\n        <button onClick={hideForm} className={styles.cancel}>\r\n          <svg fill=\"#010048\" height=\"16px\" viewBox=\"0 0 329.26933 329\" width=\"16px\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m194.800781 164.769531 128.210938-128.214843c8.34375-8.339844 8.34375-21.824219 0-30.164063-8.339844-8.339844-21.824219-8.339844-30.164063 0l-128.214844 128.214844-128.210937-128.214844c-8.34375-8.339844-21.824219-8.339844-30.164063 0-8.34375 8.339844-8.34375 21.824219 0 30.164063l128.210938 128.214843-128.210938 128.214844c-8.34375 8.339844-8.34375 21.824219 0 30.164063 4.15625 4.160156 9.621094 6.25 15.082032 6.25 5.460937 0 10.921875-2.089844 15.082031-6.25l128.210937-128.214844 128.214844 128.214844c4.160156 4.160156 9.621094 6.25 15.082032 6.25 5.460937 0 10.921874-2.089844 15.082031-6.25 8.34375-8.339844 8.34375-21.824219 0-30.164063zm0 0\"/></svg>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {addingItem ? AddItemForm : AddItemButton}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddItem;","export const ADD_CARD = \"ADD-CARD\";\r\n\r\nconst addCard = (listID, card, index) => ({\r\n  type: ADD_CARD,\r\n  payload: {\r\n    listID,\r\n    card,\r\n    index\r\n  },\r\n})\r\n\r\nexport default addCard;","export const DELETE_LIST = \"DELETE_LIST\";\r\n\r\nconst deleteList = (id) => ({\r\n  type: DELETE_LIST,\r\n  payload: id,\r\n})\r\n\r\nexport default deleteList;","import styles from './List.module.css';\r\nimport Card from \"../Card/Card\";\r\nimport AddItem from \"../AddItem/AddItem\";\r\nimport addCard from \"../../actions/add-card\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Droppable} from \"react-beautiful-dnd\";\r\nimport deleteCard from \"../../actions/delete-card\";\r\nimport deleteList from \"../../actions/delete-list\";\r\nimport close from '../../assets/images/close.svg';\r\n\r\nconst List = ({list, innerRef, dragHandleProps, draggableProps, index}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const addItem = (text) => {\r\n    dispatch(addCard(\r\n      list.id,\r\n      {\r\n        title: text,\r\n      },\r\n      list.cards.length\r\n    ));\r\n  }\r\n\r\n  const handleClick = () => {\r\n    dispatch(deleteList(list.id))\r\n  }\r\n\r\n  return (\r\n    <div className={styles.list} ref={innerRef} {...dragHandleProps} {...draggableProps}>\r\n      <header>\r\n        {list.title}\r\n        <button onClick={handleClick}><img src={close} alt={\"delete\"}/></button>\r\n      </header>\r\n      <Droppable droppableId={list.id} type=\"card\">\r\n        {(provided) => (\r\n          <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n            {list.cards.map((card, index) => (\r\n              <Card card={card} key={card.id} index={index} listID={list.id}/>\r\n            ))}\r\n            {provided.placeholder}\r\n          </ul>\r\n        )}\r\n      </Droppable>\r\n      <AddItem addItem={addItem} styles={styles}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List;","const selectBoard = (state) => state.board;\r\n\r\nexport default selectBoard;","import selectBoard from \"./select-board\";\r\n\r\nconst selectList = (listID) => {\r\n  return (state) => {\r\n    const board = selectBoard(state);\r\n    const lists = board.lists;\r\n    for (let list of lists) {\r\n      if (list.id === listID) {\r\n        return list;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default selectList;","import selectList from \"./select-list\";\r\n\r\nconst selectCard = (listID, index) => (state) => {\r\n  const list = selectList(listID)(state);\r\n  const cards = list.cards;\r\n  return cards[index];\r\n}\r\n\r\nexport default selectCard;","import selectCard from \"../selectors/select-card\";\r\nimport addCard from \"../actions/add-card\";\r\nimport deleteCard from \"../actions/delete-card\";\r\n\r\nconst reorderCard = (source, destination) => (dispatch, getState) => {\r\n  const card = selectCard(source.droppableId, source.index)(getState());\r\n\r\n  dispatch(deleteCard(source.droppableId, source.index))\r\n  dispatch(addCard(destination.droppableId, card, destination.index));\r\n}\r\n\r\nexport default reorderCard;","import selectList from \"../selectors/select-list\";\r\nimport deleteList from \"../actions/delete-list\";\r\nimport addListActionCreator from \"../actions/add-list\";\r\n\r\nconst reorderList = (listID, destination) => (dispatch, getState) => {\r\n  const list = {\r\n    ...selectList(listID)(getState())\r\n  };\r\n  dispatch(deleteList(listID))\r\n  dispatch(addListActionCreator(list.title, destination.index, list.cards))\r\n}\r\n\r\nexport default reorderList;","import addListActionCreator from \"../../actions/add-list\";\r\nimport List from \"../List/List\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport AddItem from \"../AddItem/AddItem\";\r\nimport styles from './Board.module.css'\r\nimport {DragDropContext, Draggable, Droppable} from \"react-beautiful-dnd\";\r\nimport reorderCard from \"../../thunks/reorder-card\";\r\nimport selectBoard from \"../../selectors/select-board\";\r\nimport reorderList from \"../../thunks/reorder-list\";\r\n\r\n\r\nconst Board = ({board}) => {\r\n  const dispatch = useDispatch();\r\n  const lists = useSelector(selectBoard).lists;\r\n\r\n  const addList = (title) => {\r\n    dispatch(addListActionCreator(title, lists.length, []));\r\n  }\r\n\r\n  const handleDragEnd = (result) => {\r\n    const {source, destination} = result;\r\n    if (!destination) return;\r\n\r\n    if (result.type === 'card') {\r\n      dispatch(reorderCard(source, destination))\r\n    }\r\n    else if (result.type === 'list') {\r\n      dispatch(reorderList(result.draggableId, destination))\r\n    }\r\n    // console.log(result);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.board} style={{\r\n      backgroundImage: `url(${board.backgroundURL})`,\r\n    }}>\r\n      <header>\r\n        {board.title}\r\n      </header>\r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        <Droppable droppableId=\"all-columns\" direction=\"horizontal\" type=\"list\">\r\n          {(provided) => (\r\n            <main {...provided.droppableProps} ref={provided.innerRef}>\r\n              {board.lists.map((list, index) => (\r\n                <Draggable draggableId={list.id} index={index} key={list.id} type=\"list\">\r\n                  {(provided) => (\r\n                    <List innerRef={provided.innerRef} draggableProps={provided.draggableProps} dragHandleProps={provided.dragHandleProps} list={list} index={index} />\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n              <AddItem addItem={addList} item={'list'} styles={styles}/>\r\n            </main>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board;","import Board from \"./components/Board/Board\";\r\nimport {useSelector} from \"react-redux\";\r\nimport selectBoard from \"./selectors/select-board\";\r\n// import styles from './App.module.css'\r\n\r\nfunction App() {\r\n  const board = useSelector(selectBoard);\r\n  return (\r\n      <div className=\"App\">\r\n        <Board board={board}/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","function randomInteger(min, max) {\r\n  // случайное число от min до (max+1)\r\n  let rand = min + Math.random() * (max + 1 - min);\r\n  return Math.floor(rand);\r\n}\r\n\r\nexport default randomInteger;","import randomInteger from \"../utils/random-integer\";\r\nimport selectBoard from \"../selectors/select-board\";\r\nimport {ADD_LIST} from \"../actions/add-list\";\r\nimport {ADD_CARD} from \"../actions/add-card\";\r\nimport {DELETE_CARD} from \"../actions/delete-card\";\r\nimport {DELETE_LIST} from \"../actions/delete-list\";\r\nimport selectList from \"../selectors/select-list\";\r\n\r\nconst initialState = {\r\n  board: {\r\n    title: \"If I'm not too lazy, support for boards will come soon :)\",\r\n    id: 'iwer0234h',\r\n    backgroundURL: 'https://img5.goodfon.com/wallpaper/nbig/9/23/synth-retrowave-synthwave-fon-new-retro-wave-sintveiv-ret-16.jpg',\r\n    dragging: null,\r\n    lists: [\r\n      {\r\n        title: \"Your first list\",\r\n        id: '230942398432',\r\n        cards: [\r\n          {\r\n            id: '3093',\r\n            title: \"Your first card\",\r\n            text: \"This is simple demo card\"\r\n          },\r\n          {\r\n            id: '2393',\r\n            title: \"Your second card\",\r\n            text: \"This is simple demo card\"\r\n          },\r\n          {\r\n            id: '323292039',\r\n            title: \"Your third card\",\r\n            text: \"This is simple demo card\"\r\n          },\r\n          {\r\n            id: '23903293',\r\n            title: \"Your fourth card\",\r\n            text: \"This is simple demo card\"\r\n          },\r\n        ]\r\n      }\r\n    ],\r\n  }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_LIST: {\r\n      const newLists = Array.from(selectBoard(state).lists);\r\n      newLists.splice(action.payload.index, 0, {\r\n        id: String(randomInteger(0, 10000)),\r\n        title: action.payload.title,\r\n        cards: [...action.payload.cards],\r\n      })\r\n      return {\r\n        board: {\r\n          ...state.board,\r\n          lists: newLists,\r\n        }\r\n      }\r\n    }\r\n    case ADD_CARD: {\r\n      const newLists = Array.from(selectBoard(state).lists);\r\n      for (let list of newLists) {\r\n        if (list.id === action.payload.listID) {\r\n          let newList = list;\r\n          newList.cards.splice(action.payload.index, 0, {\r\n            id: String(randomInteger(0, 10000)),\r\n            title: action.payload.card.title,\r\n          });\r\n          list = newList;\r\n        }\r\n      }\r\n      return {\r\n        board: {\r\n          ...state.board,\r\n          lists: newLists,\r\n        }\r\n      }\r\n    }\r\n    case DELETE_CARD: {\r\n      const list = selectList(action.payload.listID)(state);\r\n      const cards = list.cards;\r\n\r\n      let newCards = Array.from(cards);\r\n      newCards.splice(action.payload.index, 1);\r\n      const lists = [...state.board.lists];\r\n      let listIndex = null;\r\n      for (let i = 0; i < lists.length; i++) {\r\n        if (lists[i].id === action.payload.listID) {\r\n          listIndex = i;\r\n        }\r\n      }\r\n      const newList = {\r\n        ...list,\r\n        cards: newCards,\r\n      }\r\n      let newLists = [...lists];\r\n      newLists.splice(listIndex, 1, newList);\r\n      return {\r\n        board: {\r\n          ...state.board,\r\n          lists: newLists,\r\n        }\r\n      }\r\n    }\r\n    case DELETE_LIST: {\r\n      let newBoard = {\r\n        ...selectBoard(state)\r\n      };\r\n      let newLists = newBoard.lists;\r\n      const index = newLists.findIndex((list) => list.id === action.payload);\r\n      newLists.splice(index, 1);\r\n      newBoard = {\r\n        ...newBoard,\r\n        lists: newLists,\r\n      };\r\n      return {\r\n        ...state,\r\n        board: newBoard\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","const saveState = (state) => {\r\n  const stringifiedState = JSON.stringify(state);\r\n  localStorage.setItem('state', stringifiedState);\r\n}\r\n\r\nexport default saveState;","import {applyMiddleware, createStore} from \"redux\";\r\nimport reducer from \"../reducers/main\";\r\nimport thunk from \"redux-thunk\";\r\nimport loadState from \"../utils/load-state\";\r\nimport saveState from \"../utils/save-state\";\r\n\r\nconst savedState = loadState();\r\n\r\nconst store = createStore(reducer, savedState, applyMiddleware(thunk));\r\n\r\nstore.subscribe(() => {\r\n  saveState(store.getState())\r\n})\r\n\r\nexport default store;","const loadState = () => {\r\n  const state = localStorage.getItem('state');\r\n  if (state === null) return undefined;\r\n  return JSON.parse(state);\r\n}\r\n\r\nexport default loadState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}